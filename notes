________________________________________________________________________________
8/29/2023

notes from colin regarding aws sso as cognito idp:

Glad ya'll like it.  It may interest you to know that  nagios.cdlib.org is a cname that was pointing to the A record for the ec2 instance running nagios.  I changed it to point to the A record the ALB is using (ias-nagios.cdlib.org), and I even remembered to include the alternate subject name in the cert, but cognito didn't like that and would throw up an error if you didn't use ias-nagios.cdlib.org explicitly.  Still not entirely sure why, but I'm guessing it's probably a cross site forgery kind of thing built into cognito/ALB.  I had to add a rewrite rule to the listener to rewrite the host header to get it to work when using the cname.  Totally didn't see that one coming and had to figure it out on the fly this morning.

---

Aug 24

  1:25 PM
Hey Colin, can you point me to documentation on how to setup cognito with aws sso?
  1:27 PM
Ours or AWS's?  Ours is on github:https://github.com/cdlib/ias-cognito-sso
1:27
I probably need to add you.  And my MFA device is out of reach.  One second...
1:32
I had to cherry pick from a bunch of AWS docs to get it to work.  I think these 4 are mostly what I used:

    https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-authentication-flow.html
    https://static.global.sso.amazonaws.com/app-520727d4117d1647/instructions/index.htm
    https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-configuring-federation-with-saml-2-0-idp.html
    https://repost.aws/knowledge-center/cognito-user-pool-iam-integration

docs.aws.amazon.comdocs.aws.amazon.com
User pool authentication flow - Amazon Cognito
A description of the sign-in process with Amazon Cognito user pools and the user pools API. A description of the sequence of API requests that result in sign-up, sign-in, account lockout, and user migration.
docs.aws.amazon.comdocs.aws.amazon.com
Step 4. Add sign-in with a SAML identity provider to a user pool (optional) - Amazon Cognito
You can enable your app users to sign in through a SAML identity provider (IdP). Whether your users sign in directly or through a third party, all users have a profile in the user pool. Skip this step if you don't want to add sign in through a SAML identity provider.

Amazon Web Services, Inc.Amazon Web Services, Inc.
Integrate IAM Identity Center with Amazon Cognito
I want to configure AWS IAM Identity Center (successor to AWS Single Sign-On) with a third-party identity provider (IdP) for my Amazon Cognito user pool.
1:34
You'll need us to do the SSO/IdP side, and it's not available through the SDK or CLI, just clickops in the console, so we can't even set up a pull request thingie with this stuff.  But you can do the Cognito User (and Identity Pool, if necessary) side and the ALB or whatever you use instead of an ALB side as IaC.
1:37
Amy used a lambda function with her own logic for the authorizer.  I'm trying to figure out how to make API Gateway do that, but so far it doesn't seem to be completely possible.  It only seems to work if you can somehow turn the tokens from cognito into a query string in the URL, or find some way to pass them as JWT tokens, which Cognito apparently doesn't do.  The ALB Listener Authentication Rule has some magic to handle all this, but API Gateway does not.

________________________________________________________________________________
8/25/2023

got real far.  Ive create OS service role, cognito userpool,appclient,identitypool. cdk synth
succeeds, but cdk deploy fails when I try to apply these in the coggnito options.  


ResourceProperties: '{"CognitoOptions":{"UserPoolId":"us-west-2_s0hFURHmp","Enabled":"true","IdentityPoolId":"us-west-2:01289f10-9d7d-470c-948d-9d61f3c3ea5e","RoleArn":"arn:aws:iam::671846987296:role/CognitoAccessForAmazonOpenSearch"},"AdvancedSecurityOptions":{"InternalUserDatabaseEnabled":"true","Enabled":"true","MasterUserOptions":{"MasterUserPassword":"{{resolve:secretsmanager:uc3-ops-opensearch-dev-admin-password:SecretString:::}}","MasterUserName":"domain-admin"}},"EngineVersion":"OpenSearch_2.7","SoftwareUpdateOptions":{"AutoSoftwareUpdateEnabled":"true"},"LogPublishingOptions":{"ES_APPLICATION_LOGS":{"CloudWatchLogsLogGroupArn":"arn:aws:logs:us-west-2:671846987296:log-group:Uc3OpsOpensearchStack-DomainAppLogs21698C1B-wkOCFhCxdMbM:*","Enabled":"true"}},"EBSOptions":{"EBSEnabled":"true","VolumeType":"gp2","VolumeSize":"10"},"NodeToNodeEncryptionOptions":{"Enabled":"true"},"EncryptionAtRestOptions":{"Enabled":"true"},"DomainEndpointOptions":{"EnforceHTTPS":"true","TLSSecurityPolicy":"Policy-Min-TLS-1-0-2019-07"},"ClusterConfig":{"InstanceCount":"3","MultiAZWithStandbyEnabled":"false","DedicatedMasterEnabled":"false","ZoneAwarenessConfig":{"AvailabilityZoneCount":"3"},"InstanceType":"t3.small.search","ZoneAwarenessEnabled":"true"}}'
ResourceStatus: UPDATE_FAILED
ResourceStatusReason: 'Resource handler returned message: "Invalid request provided:
  Domain needs to be specified for user pool (Service: OpenSearch, Status Code: 400,
  Request ID: e659f6cd-fe7b-4b72-8f90-e946faeda9a3)" (RequestToken: 049606ea-1487-14aa-b3ac-c0cb652feafe,
  HandlerErrorCode: InvalidRequest)'
ResourceType: AWS::OpenSearchService::Domain
Timestamp: '2023-08-25T23:52:14.901000+00:00'




________________________________________________________________________________
8/25/2023

trying to create a cognito identity pool.  this requires alpha npm package 
@aws-cdk/aws-cognito-identitypool-alpha.  I installed this globally, but keep getting error:

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> cdk synth
/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:859
    return new TSError(diagnosticText, diagnosticCodes, diagnostics);
           ^
TSError: ⨯ Unable to compile TypeScript:
lib/uc3-ops-opensearch-stack.ts:9:62 - error TS2307: Cannot find module '@aws-cdk/aws-cognito-identitypool-alpha@2.93.0-alpha.0' or its corresponding type declarations.

9 import { IdentityPool, UserPoolAuthenticationProvider } from '@aws-cdk/aws-cognito-identitypool-alpha@2.93.0-alpha.0';
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    at createTSError (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:863:19)
    at getOutput (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:1077:36)
    at Object.compile (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:1433:41)
    at Module.m._compile (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)
    at Object.require.extensions.<computed> [as .ts] (/home/agould/development/aws-cdk/workspace/uc3-ops-opensearch/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1091:32)
    at Function.Module._load (node:internal/modules/cjs/loader:938:12)
    at Module.require (node:internal/modules/cjs/loader:1115:19) {
  diagnosticCodes: [ 2307 ]
}

Subprocess exited with error 1



I tried installing it locally, I tried adding it to packages.json. I tried a bunch of google/stacktrace dead ends.  But one of these paid off:


  I have faced similar issue and my build was not working.
  
  However, my installing ts-node as global seems to solve the problem
  
  npm install -g typescript
  npm install -g ts-node
  npm install -g aws-cdk


after installing ts-node globally, it still errored.  so then I installed the cognito alpha locally,
and now it works:


agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm -g list
/home/agould/.nvm/versions/node/v20.5.0/lib
├── @aws-cdk/aws-cognito-identitypool-alpha@2.93.0-alpha.0
├── aws-cdk-lib@2.93.0
├── aws-cdk@2.93.0
├── constructs@10.2.69
├── corepack@0.19.0
├── npm@9.8.1
└── typescript@5.1.6

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm list
npm ERR! code ELSPROBLEMS
npm ERR! missing: @aws-cdk/aws-cognito-identitypool-alpha@^2.93.02.93.0, required by uc3-ops-opensearch@0.1.0
uc3-ops-opensearch@0.1.0 /home/agould/development/aws-cdk/workspace/uc3-ops-opensearch
├── UNMET DEPENDENCY @aws-cdk/aws-cognito-identitypool-alpha@^2.93.02.93.0
├── @types/jest@29.5.3
├── @types/node@20.4.10
├── aws-cdk-lib@2.92.0
├── aws-cdk@2.92.0
├── constructs@10.2.69
├── jest@29.6.3
├── source-map-support@0.5.21
├── ts-jest@29.1.1
├── ts-node@10.9.1
└── typescript@5.1.6


npm ERR! A complete log of this run can be found in: /home/agould/.npm/_logs/2023-08-25T21_59_01_871Z-debug-0.log

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm install -g ts-node

added 19 packages in 2s
agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm run build

> uc3-ops-opensearch@0.1.0 build
> tsc

lib/uc3-ops-opensearch-stack.ts:9:62 - error TS2307: Cannot find module '@aws-cdk/aws-cognito-identitypool-alpha' or its corresponding type declarations.

9 import { IdentityPool, UserPoolAuthenticationProvider } from '@aws-cdk/aws-cognito-identitypool-alpha';
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Found 1 error in lib/uc3-ops-opensearch-stack.ts:9

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm install @aws-cdk/aws-cognito-identitypool-alpha

added 1 package, changed 2 packages, and audited 356 packages in 3s

33 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> npm run build

> uc3-ops-opensearch@0.1.0 build
> tsc

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> cdk synth
Resources:
  openSearchDomainUserPoolC7EA1A42:
    Type: AWS::Cognito::UserPool






________________________________________________________________________________
8/24/2023

Now looking at non-vpc domain with cognito

https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html

example cli call from the doc:

aws opensearch create-domain --domain-name my-domain --region us-east-1
--access-policies '{ 
	"Version":"2012-10-17",
	 "Statement":[{
		"Effect":"Allow",
		"Principal":{"AWS": ["arn:aws:iam::123456789012:role/Cognito_Auth_Role"]},
		"Action":"es:ESHttp*","Resource":"arn:aws:es:us-east-1:123456789012:domain/*"
	 }]
}'
 --engine-version "OpenSearch_1.0" 
--cluster-config InstanceType=m4.xlarge.search,InstanceCount=1 
--ebs-options EBSEnabled=true,VolumeSize=10 
--cognito-options Enabled=true,UserPoolId="us-east-1_123456789",IdentityPoolId="us-east-1:12345678-1234-1234-1234-123456789012",RoleArn="arn:aws:iam::123456789012:role/CognitoAccessForAmazonOpenSearch"






________________________________________________________________________________
8/23/2023

I'm looking into using a bastion host to connect to my vpc OS domain using ssm session manager.

https://medium.com/@yaofei/ssh-tunneling-using-ssm-as-bastion-202d111dcfd9

---
schemaVersion: '2.2'
description: Enable SSM Port Forwarding
parameters: {}
mainSteps:
- action: aws:runShellScript
  name: configureServer
  inputs:
    runCommand:
    - echo "AllowTcpForwarding yes" >> /etc/ssh/sshd_config
    - echo "PermitOpen any" >> /etc/ssh/sshd_config



agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> aws ssm start-session --target i-0a554697aa929d228

SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found

https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html

agould@localhost:~> sudo rpm -ihv  https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
Retrieving https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
Preparing...                          ################################# [100%]
Updating / installing...
   1:session-manager-plugin-1.2.497.0-################################# [100%]

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> aws ssm start-session --target i-0d342a8755c280328

Starting session with SessionId: agould-0d0c645985f0fd2a7
sh-4.2$ id
uid=1001(ssm-user) gid=1001(ssm-user) groups=1001(ssm-user)
sh-4.2$ sudo -l
Matching Defaults entries for ssm-user on ip-10-66-68-49:
    !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep="COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS", env_keep+="MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS
    LC_CTYPE", env_keep+="LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES", env_keep+="LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE", env_keep+="LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET
    XAUTHORITY", secure_path=/sbin\:/bin\:/usr/sbin\:/usr/bin

User ssm-user may run the following commands on ip-10-66-68-49:
    (ALL) NOPASSWD: ALL



agould@localhost:~/.ssh> ssh-keygen -v -m PEM -f /home/agould/.ssh/id_rsa_opensearch
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/agould/.ssh/id_rsa_opensearch
Your public key has been saved in /home/agould/.ssh/id_rsa_opensearch.pub
The key fingerprint is:
SHA256:1btqauzaBsVEmAkSiJG3+mQojeZe8X0Tkvw6xkUkAsY agould@localhost


agould@localhost:~> aws ec2 import-key-pair --key-name id_rsa_opensearch --public-key-material fileb:///home/agould/.ssh/id_rsa_opensearch.pub
{
    "KeyFingerprint": "4c:8a:4d:80:ef:92:f9:d5:b0:c0:f4:d6:99:4a:9c:86",
    "KeyName": "id_rsa_opensearch",
    "KeyPairId": "key-0d388ff4341c85252"
}

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> tail ~/.ssh/config
  Compression yes
  ProxyJump cdl-aws-bastion.cdlib.org:18822

Host opensearch_tunnel
  User ssm-user
  Hostname i-0d342a8755c280328
  Localforward 9200 vpc-domain66ac69e0-wvoaxrrolojt-bnn7q7ugng4fzpkc6ly4vzesmm.us-west-2.es.amazonaws.com:443
  IdentityFile ~/.ssh/id_rsa_opensearch
  RequestTTY no
  ProxyCommand sh -c "aws ssm start-session --profile uc3-dev-ops --region us-west-2 --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'"


I hand editted the .ssh/authorized_keys file on the jumphost as user ssm-user.  then I got the tunnel to start, but I still cannot connect to opensearch 

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> telnet localhost 9200
Trying ::1...
Connected to localhost.
Escape character is '^]'.

agould@localhost:~/cdl/ops/opensearch/deployment_and_operations> ss -nt | grep 9200
ESTAB      0      0               [::1]:9200            [::1]:57168       
ESTAB      0      0               [::1]:57168           [::1]:9200        

agould@localhost:~/development/aws-cdk/workspace/uc3-ops-opensearch> curl https://localhost:9200/_dashboards

agould@localhost:~/cdl/ops/opensearch/deployment_and_operations> ss -nt | grep 9200
ESTAB 517    0           127.0.0.1:9200       127.0.0.1:37232       
ESTAB 0      0           127.0.0.1:37232      127.0.0.1:9200        
ESTAB 0      0               [::1]:9200           [::1]:57168       
ESTAB 0      0               [::1]:57168          [::1]:9200        



________________________________________________________________________________
8/22/2023

I was undable to et cdk to deploy opensearch domain with only one node.  it complated about
subnets and AZs.

I tried to configure vpcSubnets property, but all my attempts failed.  here is syntaxes I tried:

export class Uc3OpsOpensearchStack extends cdk.Stack {
  constructor(scope: Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

    const vpc = ec2.Vpc.fromLookup(this, 'PublicVpc',
        {tags: {'Name': "cdl-uc3-dev-vpc"}});

    //const subnet = cdk.Fn.importValue('defaultsubnet2b');
    //const subnets = vpc.selectSubnets({
    //  availabilityZones: ['us-west-2b'],
    //});

    //const selection : ec2.SubnetSelection =   {
    //  subnetType: ec2.SubnetType.PUBLIC,
    //};

    const domain = new opensearch.Domain(this, 'Domain', {
      version: opensearch.EngineVersion.OPENSEARCH_2_7,
      enableVersionUpgrade: true,
      enableAutoSoftwareUpdate: true,
      removalPolicy: cdk.RemovalPolicy.DESTROY,
      vpc: vpc,
      //vpcSubnets: subnets,
      //vpcSubnets: selection,
      //vpcSubnets: {
      //  //availabilityZones: ['us-west-2b'],
      //  //subnets: {
      //  //  availabiltyZone: 'us-west-2b',
      //  //  stack: 'cdl-uc3-dev-defaultsubnet-stack',
      //  //},
      //  subnetType: ec2.SubnetType.PUBLIC,
      //},

